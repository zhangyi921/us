{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Index","react_default","a","createElement","src","logo","className","alt","href","target","rel","About","console","log","Users","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleItemClick","e","_ref","name","setState","activeItem","handleUpdate","_ref2","calculations","elem1","document","getElementById","elem2","state","width","pixelsPassed","hidden","style","left","toString","color","heartVisible","showMenuBar","visible","hideMenuBar","direction","height","topPassed","bottomPassed","percentagePassed","topVisible","bottomVisible","fits","passing","onScreen","offScreen","contextRef","React","createRef","Segment","inverted","margin","background","padding","Menu","pointing","secondary","border","size","fixed","Item","active","onClick","position","Button","as","primary","marginLeft","Visibility","context","onOnScreen","once","onUpdate","id","Icon","Transition","animation","duration","onBottomPassed","react_router_dom","to","react_router","path","exact","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a5764cf6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Menu, Segment, Transition, Visibility, Button, Grid, Icon } from 'semantic-ui-react'\nimport Zoom from 'react-reveal/Zoom';\n\n// this is my couple app demo\n// packages used: sematic ui, react reaveal\n// npm run predeploy\n// npm run deploy\nfunction Index() {\n  return (\n    <div>\n      <h2>Home</h2>\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n    </div>\n  );\n}\n\nfunction About() {\n  console.log(\"this is about\");\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  console.log(\"this is users\");\n  return <h2>Users</h2>;\n}\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = { activeItem: 'home', visible: false, heartVisible: false,\n      calculations: {\n      direction: 'none',\n      height: 0,\n      width: 0,\n      topPassed: false,\n      bottomPassed: false,\n      pixelsPassed: 0,\n      percentagePassed: 0,\n      topVisible: false,\n      bottomVisible: false,\n      fits: false,\n      passing: false,\n      onScreen: false,\n      offScreen: false,\n    }, };\n    this.contextRef = React.createRef();\n  }\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n  handleUpdate = (e, { calculations }) => {\n    this.setState({ calculations }); \n    var elem1 = document.getElementById(\"overview-hearts\");\n    var elem2 = document.getElementById(\"overview-hearts2\");\n    if (this.state.calculations.width-this.state.calculations.pixelsPassed*2.4>-1 && elem1.hidden === false){\n      elem1.style.left = (this.state.calculations.pixelsPassed*1.2).toString() + \"px\"; \n      elem1.style.color = \"#63b6ff\";\n      elem2.style.left = (this.state.calculations.width-this.state.calculations.pixelsPassed*1.2).toString() + \"px\";\n      elem2.style.color = \"#ff6b83\";\n\n    } else{\n      elem1.hidden = true;\n      elem2.hidden = true;\n      this.setState({ heartVisible: true });\n    }\n    \n\n    console.log(this.state.calculations.pixelsPassed)\n  }\n  showMenuBar = ()=>{\n    this.setState({visible: true})\n  }\n  hideMenuBar = ()=>{\n    this.setState({visible: false})\n  }\n\n  render(){\n    const { activeItem } = this.state;\n    const { calculations } = this.state;\n    return (\n      <div className=\"App\">\n        <Segment inverted style={{margin:0, background: \"#a0d2ff\", padding: 0}} className=\"top-menu-bar\">\n          <Menu inverted pointing secondary style={{border:\"black\", background: \"#a0d2ff\", padding: 2}}  \n            size={this.state.visible ? \"small\": \"huge\"} fixed={this.state.visible ? 'top' : null}>\n            <Menu.Item name='home' active={activeItem === 'home'} onClick={this.handleItemClick} style={{background: \"#a0d2ff\"}} color={\"pink\"}/>\n            <Menu.Item\n              name='Overview'\n              active={activeItem === 'Overview'}\n              onClick={this.handleItemClick}\n              style={{background: \"#a0d2ff\"}}\n              color={\"pink\"}\n            />\n            <Menu.Item\n              name='Private'\n              active={activeItem === 'Private'}\n              onClick={this.handleItemClick}\n              style={{background: \"#a0d2ff\"}}\n              color={\"pink\"}\n            />\n            <Menu.Item\n              name='Public'\n              active={activeItem === 'Public'}\n              onClick={this.handleItemClick}\n              style={{background: \"#a0d2ff\"}}\n              color={\"pink\"}\n            />\n            <Menu.Item\n              name='Love Data'\n              active={activeItem === 'Love Data'}\n              onClick={this.handleItemClick}\n              style={{background: \"#a0d2ff\"}}\n              color={\"pink\"}\n            />\n            <Menu.Item\n              name='About This Demo'\n              active={activeItem === 'About This Demo'}\n              onClick={this.handleItemClick}\n              style={{background: \"#a0d2ff\"}}\n              color={\"pink\"}\n            />\n            <Menu.Item\n              name='login'\n              active={activeItem === 'login'}\n              onClick={this.handleItemClick}\n              style={{background: \"#a0d2ff\", border:\"none\"}}\n              color={\"pink\"}\n              position='right'\n            >\n              <Button as='a' inverted={!this.state.visible} color={this.state.visible ? \"pink\": null}>\n                Log in\n              </Button>\n              <Button as='a' inverted={!this.state.visible} primary={this.state.visible} style={{ marginLeft: '0.5em' }}>\n                Sign Up\n              </Button>\n            </Menu.Item>\n          </Menu>\n        </Segment>\n        \n        <Visibility context = {this.contextRef} onOnScreen={this.hideMenuBar} once={false} onUpdate={this.handleUpdate}>\n          <div className=\"overview\">\n          </div>\n          <div className=\"overview-content\">\n            <p>This is a love space between you and your lover</p>\n            {/* <h1>{calculations.pixelsPassed.toFixed()}px</h1> */}\n          </div>\n          <div className=\"overview-hearts\" id=\"overview-hearts\">\n            <Icon name=\"heart outline\"/>\n          </div>\n          <div className=\"overview-hearts\" id=\"overview-hearts2\">\n            <Icon name=\"heart outline\"/>\n          </div>\n          <div className=\"overview-hearts\" id=\"overview-hearts3\">\n            <Transition animation={'tada'} duration={500} visible={this.state.heartVisible}><Icon name=\"heart\"/>\n            </Transition>\n            \n          </div>\n        </Visibility>\n        \n        <Visibility context = {this.contextRef} onBottomPassed = {this.showMenuBar} once={false}></Visibility>\n        <header className=\"App-header\">\n          <Router>\n          <div>\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/\">Home1</Link>\n                </li>\n                <li>\n                  <Link to=\"/about/\">About</Link>\n                </li>\n                <li>\n                  <Link to=\"/users/\">Users</Link>\n                </li>\n              </ul>\n            </nav>\n\n            <Route path=\"/\" exact component={Index} />\n            <Route path=\"/about/\" component={About} />\n            <Route path=\"/users/\" component={Users} />\n          </div>\n        </Router>\n        </header>\n        <h1>test</h1>\n\n        \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}